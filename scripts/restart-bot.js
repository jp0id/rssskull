import { spawn } from 'child_process';
import fs from 'fs';

async function restartBot() {
  console.log('üîÑ Reiniciando o bot...');
  
  // Verificar se h√° um processo do bot rodando
  console.log('üîç Verificando processos Node.js...');
  
  try {
    // Tentar parar processos Node.js (isso pode n√£o funcionar em Windows)
    console.log('‚ö†Ô∏è Para parar o bot manualmente:');
    console.log('1. Pressione Ctrl+C no terminal onde o bot est√° rodando');
    console.log('2. Ou feche o terminal');
    console.log('3. Depois execute: npm start');
    
    console.log('\nüìã Para iniciar o bot:');
    console.log('npm start');
    
    console.log('\nüîß Verificando configura√ß√£o...');
    
    // Verificar se o .env est√° correto
    const envContent = fs.readFileSync('.env', 'utf8');
    const dbUrlMatch = envContent.match(/DATABASE_URL=(.+)/);
    
    if (dbUrlMatch) {
      console.log(`‚úÖ DATABASE_URL: ${dbUrlMatch[1]}`);
    } else {
      console.log('‚ùå DATABASE_URL n√£o encontrado no .env');
    }
    
    // Verificar se o banco existe
    const dbPath = './prisma/data/development.db';
    if (fs.existsSync(dbPath)) {
      const stats = fs.statSync(dbPath);
      console.log(`‚úÖ Banco existe: ${stats.size} bytes`);
    } else {
      console.log('‚ùå Banco n√£o encontrado');
    }
    
  } catch (error) {
    console.error('‚ùå Erro:', error);
  }
}

restartBot();
